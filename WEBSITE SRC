import os
import re
from flask import Flask, request, render_template, send_file
from werkzeug.utils import secure_filename
import cv2
import pytesseract
from pytesseract import Output

# Initialize Flask
app = Flask(_name_)
UPLOAD_FOLDER = "uploads"
OUTPUT_FOLDER = "outputs"
os.makedirs(UPLOAD_FOLDER, exist_ok=True)
os.makedirs(OUTPUT_FOLDER, exist_ok=True)
app.config["UPLOAD_FOLDER"] = UPLOAD_FOLDER

# Regex patterns
SSN_PATTERN = r"\b\d{3}-\d{2}-\d{4}\b"
NAME_PATTERN = r"\b[A-Z][a-z]+ [A-Z][a-z]+\b"  # Simple name detection

@app.route("/", methods=["GET", "POST"])
def upload_file():
    if request.method == "POST":
        if "file" not in request.files:
            return "No file uploaded"
        
        file = request.files["file"]
        if file.filename == "":
            return "No file selected"
        
        filename = secure_filename(file.filename)
        filepath = os.path.join(app.config["UPLOAD_FOLDER"], filename)
        file.save(filepath)

        # Process image
        output_path = process_image(filepath, filename)
        return send_file(output_path, mimetype="image/png")
    
    return render_template("index.html")

def process_image(filepath, filename):
    # Load image
    image = cv2.imread(filepath)

    # OCR with bounding boxes
    data = pytesseract.image_to_data(image, output_type=Output.DICT)

    for i in range(len(data["text"])):
        text = data["text"][i]
        if text.strip() == "":
            continue
        
        # Check for SSNs
        if re.fullmatch(SSN_PATTERN, text):
            x, y, w, h = data["left"][i], data["top"][i], data["width"][i], data["height"][i]
            cv2.rectangle(image, (x, y), (x + w, y + h), (0, 0, 0), -1)
        
        # Check for Names
        elif re.fullmatch(NAME_PATTERN, text):
            x, y, w, h = data["left"][i], data["top"][i], data["width"][i], data["height"][i]
            cv2.rectangle(image, (x, y), (x + w, y + h), (0, 0, 0), -1)

    # Save output
    output_path = os.path.join(OUTPUT_FOLDER, "masked_" + filename)
    cv2.imwrite(output_path, image)
    return output_path

if _name_ == "_main_":
    app.run(debug=True)
